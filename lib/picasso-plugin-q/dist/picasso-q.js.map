{"version":3,"file":"picasso-q.js","sources":["../../../node_modules/extend/index.js","../src/data/extractor-s.js","../../../node_modules/d3-hierarchy/src/hierarchy/count.js","../../../node_modules/d3-hierarchy/src/hierarchy/each.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../../node_modules/d3-hierarchy/src/hierarchy/sum.js","../../../node_modules/d3-hierarchy/src/hierarchy/sort.js","../../../node_modules/d3-hierarchy/src/hierarchy/path.js","../../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../../node_modules/d3-hierarchy/src/hierarchy/links.js","../../../node_modules/d3-hierarchy/src/hierarchy/index.js","../../../node_modules/d3-hierarchy/src/accessors.js","../../../node_modules/d3-hierarchy/src/stratify.js","../src/json-path-resolver.js","../src/data/util.js","../src/data/extractor-t.js","../../../node_modules/number-format.js/lib/format.min.js","../src/formatter/parts/qs-number-formatter.js","../src/formatter/memoize.js","../src/formatter/numberFormat.js","../src/formatter/constants.js","../src/formatter/parts/qs-date-formatter.js","../src/formatter/timeFormat.js","../src/formatter/index.js","../src/data/field.js","../src/data/dataset.js","../src/brush/q-brush.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/* eslint no-nested-ternary: 0 */\n\nimport extend from 'extend';\n\nexport function getFieldAccessor(field, page, deps) {\n  if (!field) {\n    return -1;\n  }\n  const cache = deps.cache;\n  const origin = field.origin ? field.origin() : null;\n  if (origin) {\n    field = origin;\n  }\n  let fieldIdx = cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  if (fieldIdx === -1) {\n    for (let i = 0; i < cache.wrappedFields.length; i++) {\n      attrDimIdx = cache.wrappedFields[i].attrDims.map((v) => v.instance).indexOf(field);\n      attrIdx = cache.wrappedFields[i].attrExps.map((v) => v.instance).indexOf(field);\n      if (attrDimIdx !== -1 || attrIdx !== -1) {\n        fieldIdx = i;\n        break;\n      }\n    }\n  }\n\n  fieldIdx -= page.qArea.qLeft;\n  if (fieldIdx < 0 || fieldIdx >= page.qArea.qWidth) {\n    // throw new Error('Field out of range');\n    return -1;\n  }\n\n  if (attrDimIdx >= 0) {\n    return (row) => row[fieldIdx].qAttrDims.qValues[attrDimIdx];\n  }\n  if (attrIdx >= 0) {\n    return (row) => row[fieldIdx].qAttrExps.qValues[attrIdx];\n  }\n\n  return (row) => row[fieldIdx];\n}\n\n// TODO - handle 'other' value\n// const specialTextValues = {\n//   '-3': (meta) => {\n//     if ('othersLabel' in meta) {\n//       return meta.othersLabel;\n//     }\n//     return '';\n//   }\n// };\n\nfunction datumExtract(propCfg, cell, { key }) {\n  const datum = {\n    value:\n      typeof propCfg.value === 'function'\n        ? propCfg.value(cell)\n        : typeof propCfg.value !== 'undefined'\n        ? propCfg.value\n        : cell, // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label =\n    typeof propCfg.label === 'function'\n      ? propCfg.label(cell)\n      : typeof propCfg.label !== 'undefined'\n      ? String(propCfg.label)\n      : String(datum.value); // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key(),\n    };\n  }\n\n  return datum;\n}\n\nfunction cellToValue({ cache, f, mainCell, p, prop, page, rowIdx, row, sourceKey, target, targetProp }) {\n  let propCell = mainCell;\n  if (p.field && p.field !== f) {\n    const propCellFn = getFieldAccessor(p.field, page, { cache });\n    if (propCellFn === -1) {\n      return;\n    }\n    propCell = extend({ qRow: rowIdx }, propCellFn(row));\n  }\n  target[targetProp] = datumExtract(p, propCell, { key: sourceKey }, prop);\n}\n\nexport default function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  for (let i = 0; i < cfgs.length; i++) {\n    if (typeof cfgs[i].field !== 'undefined') {\n      const cube = dataset.raw();\n      const sourceKey = dataset.key();\n      const f = typeof cfgs[i].field === 'object' ? cfgs[i].field : dataset.field(cfgs[i].field);\n      const { props, main } = util.normalizeConfig(cfgs[i], dataset);\n      const propsArr = Object.keys(props);\n\n      const track = !!cfgs[i].trackBy;\n      const trackType = typeof cfgs[i].trackBy;\n      const tracker = {};\n      const trackedItems = [];\n      const items = [];\n\n      for (let j = 0; j < cube.qDataPages.length; j++) {\n        const fn = getFieldAccessor(f, cube.qDataPages[j], { cache });\n        if (fn === -1) {\n          continue;\n        }\n        for (let k = 0; k < cube.qDataPages[j].qMatrix.length; k++) {\n          const rowIdx = cube.qDataPages[j].qArea.qTop + k;\n          const mainCell = extend({ qRow: rowIdx }, fn(cube.qDataPages[j].qMatrix[k]));\n          const ret = datumExtract(main, mainCell, { key: sourceKey });\n          const exclude = main.filter && !main.filter(mainCell);\n          if (exclude) {\n            continue;\n          }\n\n          for (let l = 0; l < propsArr.length; l++) {\n            const p = props[propsArr[l]];\n            let arr = p.fields || [p];\n\n            if (p.fields) {\n              ret[propsArr[l]] = [];\n            }\n\n            // loop through all props that need to be mapped and\n            // assign 'value' and 'source' to each property\n            for (let m = 0; m < arr.length; m++) {\n              cellToValue({\n                cache,\n                f,\n                mainCell,\n                p: arr[m],\n                prop: propsArr[l],\n                props,\n                page: cube.qDataPages[j],\n                rowIdx,\n                row: cube.qDataPages[j].qMatrix[k],\n                sourceKey,\n                target: p.fields ? ret[propsArr[l]] : ret,\n                targetProp: p.fields ? m : propsArr[l],\n              });\n            }\n\n            if (p.fields) {\n              const fieldValues = ret[propsArr[l]].map((v) => v.value);\n              const fieldLabels = ret[propsArr[l]].map((v) => v.label);\n              ret[propsArr[l]] = {\n                value:\n                  typeof p.value === 'function'\n                    ? p.value(fieldValues)\n                    : typeof p.value !== 'undefined'\n                    ? p.value\n                    : fieldValues,\n                label:\n                  typeof p.label === 'function'\n                    ? p.label(fieldLabels)\n                    : typeof p.label !== 'undefined'\n                    ? String(p.label)\n                    : String(ret[propsArr[l]].value),\n              };\n            }\n          }\n\n          // collect items based on the trackBy value\n          // items with the same trackBy value are placed in an array and reduced later\n          if (track) {\n            util.track({\n              cfg: cfgs[i],\n              itemData: mainCell,\n              obj: ret,\n              target: trackedItems,\n              tracker,\n              trackType,\n            });\n          }\n\n          items.push(ret);\n        }\n      }\n\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(\n          ...util.collect(trackedItems, {\n            main,\n            propsArr,\n            props,\n          })\n        );\n      } else {\n        dataItems.push(...items);\n      }\n    }\n  }\n  return dataItems;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","/**\n * Resolves the value at the given JSON path\n * @private\n * @param  {String} path [description]\n * @param  {Object} obj  [description]\n * @return {Object}      [description]\n *\n * @example\n * let path = \"/path/to/paradise\";\n * let obj = {\n *   path: {\n *     to: { paradise: \"heaven\"},\n *     from: {...}\n *   }\n * };\n * resolve( path, obj ); // \"heaven\"\n */\nexport default function resolve(path, obj) {\n  if (path.charAt(0) === '/') {\n    path = path.substring(1);\n  }\n  const arr = path.split('/');\n  let subpath;\n  let container = obj;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === '*' && Array.isArray(container)) {\n      const carr = [];\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        let v = resolve(subpath, container[c]);\n        // v.forEach(_ => _._parent = container[c]);\n        if (Array.isArray(v)) {\n          carr.push(...v);\n        } else {\n          carr.push(v);\n        }\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    }\n    if (!arr[i] && Array.isArray(container)) {\n      const carr = new Array(container.length);\n      subpath = arr.slice(i + 1).join('/');\n      for (let c = 0; c < container.length; c++) {\n        carr[c] = resolve(subpath, container[c]);\n      }\n      return carr;\n      // return container.map(v => resolve(arr.slice(i + 1).join('/'), v));\n    }\n    if (arr[i] in container) {\n      container = container[arr[i]];\n    }\n  }\n\n  return container;\n}\n","function flattenTree(children, steps, arrIndexAtTargetDepth) {\n  const arr = [];\n  if (!children || !children.length) {\n    return arr;\n  }\n  if (steps <= 0) {\n    const nodes = arrIndexAtTargetDepth >= 0 ? [children[arrIndexAtTargetDepth]] : children;\n    arr.push(...nodes);\n  } else {\n    for (let i = 0; i < children.length; i++) {\n      if (children[i].children && children[i].children.length) {\n        arr.push(...flattenTree(children[i].children, steps - 1, arrIndexAtTargetDepth));\n      }\n    }\n  }\n  return arr;\n}\n\nexport function treeAccessor(sourceDepth, targetDepth, arrIndexAtTargetDepth) {\n  if (sourceDepth === targetDepth) {\n    return (d) => d;\n  }\n  if (sourceDepth > targetDepth) {\n    // traverse upwards\n    const steps = Math.max(0, Math.min(100, sourceDepth - targetDepth));\n    const path = [...Array(steps)].map(String.prototype.valueOf, 'parent').join('.');\n    return Function('node', `return node.${path};`); // eslint-disable-line no-new-func\n  }\n  if (targetDepth > sourceDepth) {\n    // flatten descendants\n    const steps = Math.max(0, Math.min(100, targetDepth - sourceDepth));\n    return (node) => flattenTree(node.children, steps - 1, arrIndexAtTargetDepth);\n  }\n  return false;\n}\n\nexport function findField(query, { cache }) {\n  if (typeof query === 'number') {\n    return cache.fields[query];\n  }\n\n  const allFields = cache.allFields;\n  if (typeof query === 'function') {\n    for (let i = 0; i < allFields.length; i++) {\n      if (query(allFields[i])) {\n        return allFields[i];\n      }\n    }\n    return false;\n  }\n  if (typeof query === 'string') {\n    for (let i = 0; i < allFields.length; i++) {\n      if (allFields[i].key() === query || allFields[i].title() === query) {\n        return allFields[i];\n      }\n    }\n  } else if (query && allFields.indexOf(query) !== -1) {\n    // assume 'query' is a field instance\n    return query;\n  }\n\n  throw Error(`Field not found: ${query}`);\n}\n","/* eslint no-nested-ternary: 0 */\n\nimport { hierarchy, stratify } from 'd3-hierarchy';\n\nimport picker from '../json-path-resolver';\n\nimport { treeAccessor } from './util';\n\nconst DIM_RX = /^qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /^\\/?qMeasureInfo\\/(\\d+)/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)/;\n\nfunction getColumnOrder(dataset) {\n  const qColumnOrder = dataset.raw().qColumnOrder;\n  const fields = dataset.fields();\n\n  return qColumnOrder && qColumnOrder.length === fields.length ? qColumnOrder : fields.map((f, i) => i);\n}\n\nfunction getDimensionColumnOrder(cube) {\n  const order =\n    cube.qColumnOrder && cube.qColumnOrder.length ? cube.qColumnOrder : cube.qDimensionInfo.map((d, ii) => ii);\n\n  return order.filter((ii) => ii < cube.qDimensionInfo.length);\n}\n\nexport function getFieldDepth(field, { cube }) {\n  if (!field) {\n    return -1;\n  }\n\n  let key = field.origin && field.origin() ? field.origin().key() : field.key();\n  let isFieldDimension = false;\n  let fieldIdx = -1; // cache.fields.indexOf(field);\n  let attrIdx = -1;\n  let attrDimIdx = -1;\n  let fieldDepth = -1;\n  let pseudoMeasureIndex = -1;\n  let measureIdx = -1;\n  let remainder = key;\n\n  const treeOrder = cube.qEffectiveInterColumnSortOrder;\n  const columnOrder = getDimensionColumnOrder(cube);\n\n  if (DIM_RX.test(remainder)) {\n    isFieldDimension = true;\n    fieldIdx = +DIM_RX.exec(remainder)[1];\n    remainder = key.replace(DIM_RX, '');\n  }\n\n  if (M_RX.test(remainder)) {\n    if (cube.qMode === 'K') {\n      pseudoMeasureIndex = +M_RX.exec(remainder)[1];\n    } else if (treeOrder && treeOrder.indexOf(-1) !== -1) {\n      pseudoMeasureIndex = +M_RX.exec(remainder)[1];\n      measureIdx = 0;\n    } else {\n      measureIdx = +M_RX.exec(remainder)[1];\n    }\n    remainder = remainder.replace(M_RX, '');\n  }\n\n  if (remainder) {\n    if (ATTR_DIM_RX.exec(remainder)) {\n      attrDimIdx = +ATTR_DIM_RX.exec(remainder)[1];\n    } else if (ATTR_EXPR_RX.exec(remainder)) {\n      attrIdx = +ATTR_EXPR_RX.exec(remainder)[1];\n    }\n  }\n\n  if (isFieldDimension) {\n    if (cube.qMode === 'S') {\n      fieldDepth = columnOrder[fieldIdx];\n    } else {\n      fieldDepth = treeOrder ? treeOrder.indexOf(fieldIdx) : fieldIdx;\n    }\n  } else if (treeOrder && treeOrder.indexOf(-1) !== -1) {\n    // if pseudo dimension exists in sort order\n    fieldDepth = treeOrder.indexOf(-1); // depth of pesudodimension\n  } else {\n    // assume measure is at the bottom of the tree\n    fieldDepth = cube.qDimensionInfo.length - (cube.qMode === 'K' ? 0 : 1);\n  }\n\n  return {\n    fieldDepth: fieldDepth + 1, // +1 due to root node\n    pseudoMeasureIndex,\n    measureIdx,\n    attrDimIdx,\n    attrIdx,\n  };\n}\n\nfunction getFieldAccessor(sourceDepthObject, targetDepthObject) {\n  let nodeFn = treeAccessor(\n    sourceDepthObject.fieldDepth,\n    targetDepthObject.fieldDepth,\n    targetDepthObject.pseudoMeasureIndex\n  );\n  let valueFn;\n\n  if (targetDepthObject.measureIdx >= 0) {\n    valueFn = (node) => node.data.qValues[targetDepthObject.measureIdx];\n  } else {\n    valueFn = (node) => node.data;\n  }\n  let attrFn;\n\n  if (targetDepthObject.attrDimIdx >= 0) {\n    attrFn = (data) => data?.qAttrDims?.qValues[targetDepthObject.attrDimIdx];\n  } else if (targetDepthObject.attrIdx >= 0) {\n    attrFn = (data) => data?.qAttrExps?.qValues[targetDepthObject.attrIdx];\n  }\n\n  return {\n    nodeFn,\n    attrFn,\n    valueFn,\n  };\n}\n\nfunction datumExtract(propCfg, cell, { key }) {\n  const datum = {\n    value:\n      typeof propCfg.value === 'function'\n        ? propCfg.value(cell)\n        : typeof propCfg.value !== 'undefined'\n        ? propCfg.value\n        : cell, // eslint-disable-line no-nested-ternary\n  };\n\n  datum.label =\n    typeof propCfg.label === 'function'\n      ? propCfg.label(cell)\n      : typeof propCfg.label !== 'undefined'\n      ? String(propCfg.label)\n      : String(datum.value); // eslint-disable-line no-nested-ternary\n\n  if (propCfg.field) {\n    datum.source = {\n      key,\n      field: propCfg.field.key(),\n    };\n  }\n\n  return datum;\n}\n\nfunction doIt({ propsArr, props, item, itemData, ret, sourceKey }) {\n  for (let i = 0; i < propsArr.length; i++) {\n    const pCfg = props[propsArr[i]];\n    const arr = pCfg.fields || [pCfg];\n    let coll;\n    let collStr;\n    if (pCfg.fields) {\n      coll = [];\n      collStr = [];\n    }\n\n    for (let j = 0; j < arr.length; j++) {\n      const p = arr[j];\n      let fn;\n      let str;\n      let value;\n      let nodes;\n      let cells;\n      let label;\n      if (p.type === 'primitive') {\n        value = p.value;\n        label = String(p.value);\n      } else {\n        if (typeof p.value === 'function') {\n          fn = (v) => p.value(v, item);\n        }\n        if (typeof p.label === 'function') {\n          str = (v) => p.label(v, item);\n        }\n        if (p.accessor) {\n          nodes = p.accessor(item);\n          if (Array.isArray(nodes)) {\n            // propably descendants\n            cells = nodes.map(p.valueAccessor);\n            if (p.attrAccessor) {\n              cells = cells.map(p.attrAccessor);\n            }\n            if (fn) {\n              value = cells.map(fn);\n              fn = null;\n            }\n            if (str) {\n              label = cells.map(str);\n              str = null;\n            }\n            value = p.reduce ? p.reduce(value) : value;\n            label = p.reduceLabel ? p.reduceLabel(label, value) : String(value);\n          } else {\n            value = p.attrAccessor ? p.attrAccessor(p.valueAccessor(nodes)) : p.valueAccessor(nodes);\n            label = value;\n          }\n        } else {\n          value = itemData;\n          label = itemData;\n        }\n      }\n      if (pCfg.fields) {\n        const v = fn ? fn(value) : value;\n        coll.push(v);\n        collStr.push(str && label != null ? str(label) : label != null ? label : String(v));\n      } else {\n        const v = fn ? fn(value) : value;\n        ret[propsArr[i]] = {\n          value: v,\n          label: str ? str(label) : label != null ? label : String(v),\n        };\n        if (p.field) {\n          ret[propsArr[i]].source = { field: p.field.key(), key: sourceKey };\n        }\n      }\n    }\n    if (coll) {\n      ret[propsArr[i]] = {\n        value: typeof pCfg.value === 'function' ? pCfg.value(coll, item) : coll,\n        label: typeof pCfg.label === 'function' ? pCfg.label(collStr, item) : collStr,\n      };\n    }\n  }\n}\n\nconst getHierarchy = (cube, cache, config) => {\n  const rootPath = cube.qMode === 'K' ? '/qStackedDataPages/*/qData' : '/qTreeDataPages/*';\n  const childNodes = cube.qMode === 'K' ? 'qSubNodes' : 'qNodes';\n  const root = picker(rootPath, cube);\n  if (!root || !root[0]) {\n    return null;\n  }\n  cache.tree = hierarchy(root[0], config.children || ((node) => node[childNodes]));\n  return cache.tree;\n};\n\nfunction getHierarchyForSMode(dataset) {\n  const matrix = dataset.raw().qDataPages.length ? dataset.raw().qDataPages[0].qMatrix : [];\n  const order = getColumnOrder(dataset);\n  const fields = dataset.fields();\n  const dimensions = dataset\n    .fields()\n    .filter((f) => f.type() === 'dimension')\n    .map((f) => order.indexOf(fields.indexOf(f)));\n  const measures = dataset\n    .fields()\n    .filter((f) => f.type() === 'measure')\n    .map((f) => order.indexOf(fields.indexOf(f)));\n\n  const root = {\n    __id: '__root',\n    qValues: [],\n  };\n\n  const keys = {\n    __root: root,\n  };\n\n  for (let r = 0; r < matrix.length; r++) {\n    const row = matrix[r];\n    let id = '__root';\n    // let parent = root;\n    let isNew = false;\n    for (let c = 0; c < dimensions.length; c++) {\n      const cell = row[dimensions[c]];\n      const key = `${id}__${cell.qText}`;\n      if (!keys[key]) {\n        keys[key] = {\n          __id: key,\n          __parent: id,\n          qValues: [],\n          ...cell,\n        };\n        isNew = true;\n      }\n      id = key;\n    }\n    if (isNew) {\n      for (let c = 0; c < measures.length; c++) {\n        const cell = row[measures[c]];\n        keys[id].qValues.push(cell);\n      }\n    }\n  }\n\n  const nodes = Object.keys(keys).map((key) => keys[key]);\n\n  const h = stratify()\n    .id((d) => d.__id)\n    .parentId((d) => d.__parent)(nodes);\n\n  return h;\n}\n\nconst attachPropsAccessors = ({ propsArr, props, cube, cache, itemDepthObject, f }) => {\n  for (let i = 0; i < propsArr.length; i++) {\n    const pCfg = props[propsArr[i]];\n    const arr = pCfg.fields ? pCfg.fields : [pCfg];\n    for (let j = 0; j < arr.length; j++) {\n      const p = arr[j];\n      if (p.field !== f) {\n        const depthObject = getFieldDepth(p.field, { cube, cache });\n        const accessors = getFieldAccessor(itemDepthObject, depthObject);\n        p.accessor = accessors.nodeFn; // nodes accessor\n        p.valueAccessor = accessors.valueFn; // cell accessor\n        p.attrAccessor = accessors.attrFn; // attr cell accessor\n      }\n    }\n  }\n};\n\nexport function augment(config = {}, dataset, cache, util) {\n  const cube = dataset.raw();\n  const sourceKey = dataset.key();\n  const h = cube.qMode === 'S' ? getHierarchyForSMode(dataset) : getHierarchy(cube, cache, config);\n  if (!h) {\n    return null;\n  }\n\n  const height = h.height;\n  const propDefs = [];\n  for (let i = 0; i <= height; i++) {\n    let f = null;\n    if (i > 0) {\n      if (cube.qMode === 'S') {\n        const order = getDimensionColumnOrder(cube);\n        let idx = order[i - 1];\n        f = cache.fields[idx];\n      } else {\n        let idx = cube.qEffectiveInterColumnSortOrder[i - 1];\n        // if (idx === -1) { // pseudo\n        //   let childIdx = node.parent.children.indexOf(node);\n        //   idx = cube.qDimensionInfo.length + childIdx; // measure field\n        // }\n        if (i > cube.qEffectiveInterColumnSortOrder.length) {\n          idx = cube.qDimensionInfo.length;\n        }\n\n        f = cache.fields[idx];\n      }\n    }\n\n    const { props, main } = util.normalizeConfig({ ...config, field: f ? f.key() : undefined }, dataset);\n    const propsArr = Object.keys(props);\n    propDefs[i] = { propsArr, props, main };\n\n    const itemDepthObject = f ? getFieldDepth(f, { cube, cache }) : { fieldDepth: 0 };\n\n    attachPropsAccessors({\n      propsArr,\n      props,\n      cube,\n      cache,\n      itemDepthObject,\n      f,\n    });\n  }\n\n  const replica = h.copy();\n  const replicaDescendants = replica.descendants();\n  const descendants = h.descendants();\n\n  for (let i = 0; i < descendants.length; i++) {\n    const propsArr = propDefs[descendants[i].depth].propsArr;\n    const props = propDefs[descendants[i].depth].props;\n    const main = propDefs[descendants[i].depth].main;\n\n    const item = replicaDescendants[i];\n    const itemData = item.data; // main.valueAccessor(currentOriginal);\n\n    const ret = datumExtract(main, itemData, { key: sourceKey });\n    doIt({\n      propsArr,\n      props,\n      item,\n      itemData,\n      ret,\n      sourceKey,\n      isTree: true,\n    });\n    descendants[i].data = ret;\n  }\n  return h;\n}\n\nexport function extract(config, dataset, cache, util) {\n  const cfgs = Array.isArray(config) ? config : [config];\n  let dataItems = [];\n  for (let g = 0; g < cfgs.length; g++) {\n    if (typeof cfgs[g].field !== 'undefined') {\n      const cube = dataset.raw();\n      const sourceKey = dataset.key();\n      const h = getHierarchy(cube, cache, config);\n      if (!h) {\n        continue;\n      }\n\n      const f = typeof cfgs[g].field === 'object' ? cfgs[g].field : dataset.field(cfgs[g].field);\n      const { props, main } = util.normalizeConfig(cfgs[g], dataset);\n      const propsArr = Object.keys(props);\n\n      const itemDepthObject = getFieldDepth(f, { cube, cache });\n      const { nodeFn, attrFn, valueFn } = getFieldAccessor({ fieldDepth: 0 }, itemDepthObject);\n\n      attachPropsAccessors({\n        propsArr,\n        props,\n        cube,\n        cache,\n        itemDepthObject,\n        f,\n      });\n\n      const track = !!cfgs[g].trackBy;\n      const trackType = typeof cfgs[g].trackBy;\n      const tracker = {};\n      const trackedItems = [];\n\n      const items = nodeFn(cache.tree);\n      const mapped = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        const itemData = attrFn ? attrFn(valueFn(item)) : valueFn(item);\n        const exclude = main.filter && !main.filter(itemData);\n        if (exclude) {\n          continue;\n        }\n        const ret = datumExtract(main, itemData, { key: sourceKey });\n        doIt({\n          propsArr,\n          props,\n          item,\n          itemData,\n          ret,\n          sourceKey,\n        });\n        // collect items based on the trackBy value\n        // items with the same trackBy value are placed in an array and reduced later\n        if (track) {\n          util.track({\n            cfg: cfgs[g],\n            itemData,\n            obj: ret,\n            target: trackedItems,\n            tracker,\n            trackType,\n          });\n        }\n        mapped.push(ret);\n      }\n      // reduce if items have been grouped\n      if (track) {\n        dataItems.push(\n          ...util.collect(trackedItems, {\n            main,\n            propsArr,\n            props,\n          })\n        );\n      } else {\n        dataItems.push(...mapped);\n      }\n    }\n  }\n  return dataItems;\n}\n","/*! javascript-number-formatter - v1.1.11 - http://mottie.github.com/javascript-number-formatter/ * © ecava */\n!function(a,b){\"function\"==typeof define&&define.amd?define([],b):\"object\"==typeof module?module.exports=b():a.format=b()}(this,function(){return function(a,b){\"use strict\";if(!a||isNaN(+b))return b;var c,d,e,f,g,h,i,j,k,l,m=a.length,n=a.search(/[0-9\\-\\+#]/),o=n>0?a.substring(0,n):\"\",p=a.split(\"\").reverse().join(\"\"),q=p.search(/[0-9\\-\\+#]/),r=m-q,s=a.substring(r,r+1),t=r+(\".\"===s||\",\"===s?1:0),u=q>0?a.substring(t,m):\"\";if(a=a.substring(n,t),b=\"-\"===a.charAt(0)?-b:+b,c=b<0?b=-b:0,d=a.match(/[^\\d\\-\\+#]/g),e=d&&d[d.length-1]||\".\",f=d&&d[1]&&d[0]||\",\",a=a.split(e),b=b.toFixed(a[1]&&a[1].length),b=+b+\"\",h=a[1]&&a[1].lastIndexOf(\"0\"),j=b.split(\".\"),(!j[1]||j[1]&&j[1].length<=h)&&(b=(+b).toFixed(h+1)),k=a[0].split(f),a[0]=k.join(\"\"),g=a[0]&&a[0].indexOf(\"0\"),g>-1)for(;j[0].length<a[0].length-g;)j[0]=\"0\"+j[0];else 0===+j[0]&&(j[0]=\"\");if(b=b.split(\".\"),b[0]=j[0],i=k[1]&&k[k.length-1].length){for(l=b[0],p=\"\",r=l.length%i,m=l.length,t=0;t<m;t++)p+=l.charAt(t),!((t-r+1)%i)&&t<m-i&&(p+=f);b[0]=p}return b[1]=a[1]&&b[1]?e+b[1]:\"\",d=b.join(\"\"),\"0\"!==d&&\"\"!==d||(c=!1),o+((c?\"-\":\"\")+d)+u}});","import formatter from 'number-format.js';\n\nfunction escapeRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\nconst SIprefixes = {\n    3: 'k',\n    6: 'M',\n    9: 'G',\n    12: 'T',\n    15: 'P',\n    18: 'E',\n    21: 'Z',\n    24: 'Y',\n    '-3': 'm',\n    '-6': 'μ',\n    '-9': 'n',\n    '-12': 'p',\n    '-15': 'f',\n    '-18': 'a',\n    '-21': 'z',\n    '-24': 'y',\n  },\n  percentage = /%$/,\n  //    scientific = /e[\\+\\-][0-9]+/,\n  radix = /^\\(r(0[2-9]|[12]\\d|3[0-6])\\)/i,\n  oct = /^\\(oct\\)/i,\n  dec = /^\\(dec\\)/i,\n  hex = /^\\(hex\\)/i,\n  bin = /^\\(bin\\)/i,\n  rom = /^\\(rom\\)/i,\n  functional = /^(\\(rom\\)|\\(bin\\)|\\(hex\\)|\\(dec\\)|\\(oct\\)|\\(r(0[2-9]|[12]\\d|3[0-6])\\))/i,\n  prec = /#|0/g;\n\nfunction formatRadix(value, fradix, pattern, decimal) {\n  value = value.toString(fradix);\n  if (pattern[1] === pattern[1].toUpperCase()) {\n    value = value.toUpperCase();\n  }\n  if (value.length - value.indexOf('.') > 10) {\n    // limit to 10 decimal places\n    value = value.slice(0, value.indexOf('.') + 11);\n  }\n\n  return value.replace('.', decimal || '.');\n}\n\n// value must be an integer\n// value must not be in scientific notation\nfunction formatRoman(value, pattern) {\n  let i,\n    s = '',\n    v = Number(String(value).slice(-3)),\n    nThousands = (value - v) / 1000,\n    decimal = [0, 1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900].reverse(),\n    numeral = ['0', 'I', 'IV', 'V', 'IX', 'X', 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM'].reverse();\n\n  while (v > 0) {\n    for (i = 0; i < decimal.length; i++) {\n      if (decimal[i] <= v) {\n        s += numeral[i];\n        v -= decimal[i];\n        break;\n      }\n    }\n  }\n\n  for (i = 0; i < nThousands; i++) {\n    s = `M${s}`;\n  }\n\n  if (pattern[1] !== pattern[1].toUpperCase()) {\n    s = s.toLowerCase();\n  }\n  return s;\n}\n\nfunction formatFunctional(value, pattern, d) {\n  let temp;\n  if (radix.test(pattern)) {\n    value = formatRadix(value, Number(/\\d{2}/.exec(pattern)[0]), pattern, d);\n  } else if (oct.test(pattern)) {\n    value = formatRadix(value, 8, pattern, d);\n  } else if (dec.test(pattern)) {\n    value = formatRadix(value, 10, pattern, d);\n  } else if (hex.test(pattern)) {\n    value = formatRadix(value, 16, pattern, d);\n  } else if (bin.test(pattern)) {\n    value = formatRadix(value, 2, pattern, d);\n  } else if (rom.test(pattern)) {\n    temp = '';\n    if (value < 0) {\n      temp = '-';\n      value = -value;\n    }\n    value = Math.floor(value);\n    if (value === 0) {\n      value = '0';\n    } else if (value <= 500000) {\n      // limit in engine\n      value = formatRoman(value, pattern);\n      value = temp + value;\n    } else {\n      value = pattern + temp + value.toExponential(0); // to return same result as engine\n    }\n  }\n\n  return value;\n}\n\nfunction escape(value, flags, justStr) {\n  const str = escapeRegExp(value);\n  if (justStr) {\n    return str;\n  }\n  return new RegExp(str || '', flags);\n}\n\nfunction createRegExp(thousand, decimal) {\n  if (decimal) {\n    decimal = escapeRegExp(decimal);\n  }\n  if (thousand) {\n    thousand = escapeRegExp(thousand);\n  }\n  return new RegExp(`(?:[#0]+${thousand})?[#0]+(?:${decimal}[#0]+)?`);\n}\n\nfunction getAbbreviations(localeInfo, listSeparator) {\n  if (!localeInfo || !localeInfo.qNumericalAbbreviation) {\n    return SIprefixes;\n  }\n\n  const abbreviations = {};\n  let abbrs = localeInfo.qNumericalAbbreviation.split(listSeparator);\n\n  abbrs.forEach((abbreviation) => {\n    let abbreviationTuple = abbreviation.split(':');\n    if (abbreviationTuple.length === 2) {\n      abbreviations[abbreviationTuple[0]] = abbreviationTuple[1];\n    }\n  });\n\n  return abbreviations;\n}\n\nfunction preparePattern(o, t, d) {\n  let parts,\n    lastPart,\n    pattern = o.pattern,\n    numericPattern,\n    prefix,\n    postfix,\n    groupTemp,\n    decTemp,\n    temp,\n    regex;\n\n  if (pattern.indexOf('A') >= 0) {\n    // abbreviate SI\n    pattern = pattern.replace('A', '');\n    o.abbreviate = true;\n  }\n\n  // extract the numeric part from the pattern\n  regex = createRegExp(t, d);\n  numericPattern = pattern.match(regex);\n  numericPattern = numericPattern ? numericPattern[0] : '';\n  prefix = numericPattern ? pattern.substr(0, pattern.indexOf(numericPattern)) : pattern;\n  postfix = numericPattern ? pattern.substring(pattern.indexOf(numericPattern) + numericPattern.length) : '';\n\n  if (!numericPattern) {\n    numericPattern = pattern ? '#' : '##########';\n  }\n\n  if (t && t === d) {\n    // ignore grouping if grouping separator is same as decimal separator\n    // extract decimal part\n    parts = numericPattern.split(d);\n    lastPart = parts.pop();\n    numericPattern = parts.join('') + d + lastPart;\n    t = '';\n  }\n\n  // formatting library does not support multiple characters as separator (nor +-).\n  // do a temporary replacement\n  groupTemp = t;\n  t = /,/.test(d) ? '¤' : ',';\n  if (groupTemp) {\n    numericPattern = numericPattern.replace(escape(groupTemp, 'g'), t);\n  }\n\n  decTemp = d;\n  d = '.';\n  if (decTemp) {\n    numericPattern = numericPattern.replace(escape(decTemp, 'g'), d);\n  }\n\n  temp = numericPattern.match(/#/g);\n  temp = temp ? temp.length : 0;\n\n  const splitPattern = pattern.split(decTemp);\n  let matchPrecisionResult;\n  if (splitPattern[1]) {\n    matchPrecisionResult = splitPattern[1].match(prec);\n  }\n\n  o.prefix = prefix || '';\n  o.postfix = postfix || '';\n  o.pattern = pattern;\n  o.maxPrecision = matchPrecisionResult ? matchPrecisionResult.length : 2;\n  o.percentage = percentage.test(pattern);\n  o.numericPattern = numericPattern || '';\n  o.numericRegex = new RegExp(`${escape(t, null, true)}|${escape(d, null, true)}`, 'g');\n  o.groupTemp = groupTemp;\n  o.decTemp = decTemp;\n  o.t = t;\n  o.d = d;\n  o.temp = temp;\n}\n\nclass NumberFormatter {\n  /**\n   * @name NumberFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   * @param {String} [thousand]\n   * @param {String} [decimal]\n   * @param {String} [type]\n   */\n  constructor(localeInfo, pattern, thousand, decimal, type) {\n    this.localeInfo = localeInfo;\n    this.pattern = pattern;\n    this.thousandDelimiter = thousand || ',';\n    this.decimalDelimiter = decimal || '.';\n    this.type = type || 'numeric';\n\n    // FIXME qListSep?\n    // this.patternSeparator = this.localeInfo && this.localeInfo.qListSep ? this.localeInfo.qListSep : ';';\n    this.patternSeparator = ';';\n\n    this.abbreviations = getAbbreviations(localeInfo, this.patternSeparator);\n\n    this.prepare();\n  }\n\n  clone() {\n    const n = new NumberFormatter(\n      this.localeInfo,\n      this.pattern,\n      this.thousandDelimiter,\n      this.decimalDelimiter,\n      this.type\n    );\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a number according to a specific pattern.\n   * Use # for optional numbers and 0 for padding.\n   * @param {Number} value Number to format.\n   * @param {String} [pattern] The pattern to apply.\n   * @param {String} [t] Grouping separator.\n   * @param {String} [d] Decimal delimiter.\n   * @example\n   * format(10, \"0\") // 10;\n   * format(10, \"#\") // 10;\n   * format(10, \"##.#\") // 10;\n   * format(10, \"##.0\") // 10.0;\n   * format(10, \"000\") // 010;\n   * format(10.123, \"0.0\") // 10.1;\n   * format(10.123, \"0.00##\") // 10.123; // at least 2 decimals, never more than 4\n   * format(123456789, \"#,###\") // 123,456,789;\n   * format(123456789, \"####-####\", \"-\") // 1-2345-6789;\n   * format(10000, \"#A\") // 10k,  A -> SI abbreviation\n   * format(1234567, \"#.###A\") // 1.235M;\n   * format(0.0001, \"#.#A\") // 0.1m;\n   *\n   * format(0.257, \"0.0%\") // 25.7%; // will multiply by 100\n   * format(9876, \"$#,###\") // $9,876;\n   * format(-9876, \"$#,###;$(#,###)\") // $(9,876); // use ; for alternative formatting for negative values\n   * format(10, \"(r16)\") // a; // radix 16\n   * format(15, \"(hex)\") // f; // same as (r16)\n   * format(15, \"(HEX)\") // F;\n   * format(10, \"(bin)\") // 1010; // same as (r02)\n   * format(10, \"(oct)\") // 12; // same as (r08)\n   */\n  format(value, pattern, t, d) {\n    this.prepare(pattern, t, d);\n    return this.formatValue(value);\n  }\n\n  prepare(pattern, t, d) {\n    let prep;\n\n    if (typeof pattern === 'undefined') {\n      pattern = this.pattern;\n    }\n    if (typeof t === 'undefined') {\n      t = this.thousandDelimiter;\n    }\n    if (typeof d === 'undefined') {\n      d = this.decimalDelimiter;\n    }\n\n    if (!pattern) {\n      this._prepared = { pattern: false };\n      return;\n    }\n\n    this._prepared = {\n      positive: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: '',\n      },\n      negative: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: '',\n      },\n      zero: {\n        d,\n        t,\n        abbreviate: false,\n        isFunctional: false,\n        prefix: '',\n        postfix: '',\n      },\n    };\n    prep = this._prepared;\n\n    pattern = pattern.split(this.patternSeparator);\n    prep.positive.pattern = pattern[0];\n    prep.negative.pattern = pattern[1];\n    prep.zero.pattern = pattern[2];\n    if (functional.test(pattern[0])) {\n      prep.positive.isFunctional = true;\n    }\n    if (!pattern[1]) {\n      prep.negative = false;\n    } else if (functional.test(pattern[1])) {\n      prep.negative.isFunctional = true;\n    }\n    if (!pattern[2]) {\n      prep.zero = false;\n    } else if (functional.test(pattern[2])) {\n      prep.zero.isFunctional = true;\n    }\n\n    if (!prep.positive.isFunctional) {\n      preparePattern(prep.positive, t, d);\n    }\n    if (prep.negative && !prep.negative.isFunctional) {\n      preparePattern(prep.negative, t, d);\n    }\n    if (prep.zero && !prep.zero.isFunctional) {\n      preparePattern(prep.zero, t, d);\n    }\n  }\n\n  formatValue(value) {\n    let prep = this._prepared,\n      temp,\n      exponent,\n      abbr = '',\n      absValue,\n      num,\n      sciValue = '',\n      d,\n      t,\n      i,\n      numericPattern,\n      decimalPartPattern,\n      original = value;\n\n    if (isNaN(value)) {\n      return `${original}`;\n    }\n\n    value = +value;\n\n    if (prep.pattern === false) {\n      return value.toString();\n    }\n\n    if (value === 0 && prep.zero) {\n      prep = prep.zero;\n      return prep.pattern;\n    }\n    if (value < 0 && prep.negative) {\n      prep = prep.negative;\n      value = -value;\n    } else {\n      prep = prep.positive;\n    }\n    d = prep.d;\n    t = prep.t;\n\n    if (prep.isFunctional) {\n      value = formatFunctional(value, prep.pattern, d);\n    } else {\n      if (prep.percentage) {\n        value *= 100;\n      }\n\n      if (prep.abbreviate) {\n        const abbrArray = Object.keys(this.abbreviations)\n          .map((key) => parseInt(key, 10))\n          .sort((a, b) => a - b);\n        let lowerAbbreviation;\n        let upperAbbreviation = abbrArray[0];\n        i = 0;\n        exponent = Number(Number(value).toExponential().split('e')[1]);\n\n        while (upperAbbreviation <= exponent && i < abbrArray.length) {\n          i++;\n          upperAbbreviation = abbrArray[i];\n        }\n\n        if (i > 0) {\n          lowerAbbreviation = abbrArray[i - 1];\n        }\n\n        let suggestedAbbrExponent;\n\n        // value and lower abbreviation is for values above 10, use the lower (move to the left <==)\n        if (lowerAbbreviation && exponent > 0 && lowerAbbreviation > 0) {\n          suggestedAbbrExponent = lowerAbbreviation;\n          // value and lower abbreviation is for values below 0.1 (move to the right ==>)\n        } else if ((exponent < 0 && lowerAbbreviation < 0) || !lowerAbbreviation) {\n          // upper abbreviation is also for values below 0.1 and precision allows for using the upper abbreviation(move to the right ==>)\n          if (upperAbbreviation < 0 && upperAbbreviation - exponent <= prep.maxPrecision) {\n            suggestedAbbrExponent = upperAbbreviation;\n            // lower abbrevaition is smaller than exponent and we can't get away with not abbreviating\n          } else if (lowerAbbreviation <= exponent && !(upperAbbreviation > 0 && -exponent <= prep.maxPrecision)) {\n            // (move to left <==)\n            suggestedAbbrExponent = lowerAbbreviation;\n          }\n        }\n        if (suggestedAbbrExponent) {\n          abbr = this.abbreviations[suggestedAbbrExponent];\n          value /= Math.pow(10, suggestedAbbrExponent);\n        }\n      }\n\n      absValue = Math.abs(value);\n      temp = prep.temp;\n      numericPattern = prep.numericPattern;\n      decimalPartPattern = numericPattern.split(d)[1];\n\n      if (this.type === 'I') {\n        value = Math.round(value);\n      }\n      num = value;\n\n      if (!decimalPartPattern && numericPattern.slice(-1)[0] === '#') {\n        if (absValue >= Math.pow(10, temp) || absValue < 1 || absValue < 1e-4) {\n          if (value === 0) {\n            value = '0';\n          } else if (absValue < 1e-4 || absValue >= 1e20) {\n            // engine always formats values < 1e-4 in scientific form, values >= 1e20 can only be represented in scientific form\n            value = num.toExponential(Math.max(1, Math.min(14, temp)) - 1);\n            value = value.replace(/\\.?0+(?=e)/, '');\n            sciValue = '';\n          } else {\n            value = value.toPrecision(Math.max(1, Math.min(14, temp)));\n            if (value.indexOf('.') >= 0) {\n              value = value.replace(value.indexOf('e') < 0 ? /0+$/ : /\\.?0+(?=e)/, '');\n              value = value.replace('.', d);\n            }\n          }\n        } else {\n          numericPattern += d;\n          temp = Math.max(0, Math.min(20, temp - Math.ceil(Math.log(absValue) / Math.log(10))));\n          for (i = 0; i < temp; i++) {\n            numericPattern += '#';\n          }\n\n          value = formatter(numericPattern, value);\n        }\n      } else if (absValue >= 1e15 || (absValue > 0 && absValue <= 1e-14)) {\n        value = absValue ? absValue.toExponential(15).replace(/\\.?0+(?=e)/, '') : '0';\n      } else {\n        const wholePart = Number(\n          value.toFixed(Math.min(20, decimalPartPattern ? decimalPartPattern.length : 0)).split('.')[0]\n        );\n        let wholePartPattern = numericPattern.split(d)[0];\n        wholePartPattern += d;\n\n        value = formatter(wholePartPattern, wholePart) || '0';\n\n        if (decimalPartPattern) {\n          const nDecimals = Math.max(0, Math.min(14, decimalPartPattern.length)); // the length of e.g. 0000#####\n          const nZeroes = decimalPartPattern.replace(/#+$/, '').length;\n          let decimalPart = (this.type === 'I' ? 0 : absValue % 1).toFixed(nDecimals).slice(2).replace(/0+$/, ''); // remove trailing zeroes\n\n          for (i = decimalPart.length; i < nZeroes; i++) {\n            decimalPart += '0';\n          }\n\n          if (decimalPart) {\n            value += d + decimalPart;\n          }\n        } else if (wholePart === 0) {\n          // to avoid \"-\" being prefixed to value\n          num = 0;\n        }\n      }\n\n      value = value.replace(prep.numericRegex, (m) => {\n        if (m === t) {\n          return prep.groupTemp;\n        }\n        if (m === d) {\n          return prep.decTemp;\n        }\n        return '';\n      });\n      if (num < 0 && !/^-/.test(value)) {\n        value = `-${value}`;\n      }\n    }\n\n    return prep.prefix + value + sciValue + abbr + prep.postfix;\n  }\n\n  static getStaticFormatter() {\n    return {\n      prepare() {},\n      formatValue(v) {\n        return `${v}`;\n      },\n    };\n  }\n}\n\nexport default function numberFormatFactory(...args) {\n  return new NumberFormatter(...args);\n}\n","export default function memoize(func, opts = {}) {\n  const { size = 5000, multipleArguments = false, toKey = (arg) => arg } = opts;\n  let cache = Object.create(null);\n  let index = Object.create(null);\n  let counter = 0;\n  let fifo = 0; // First-In-First-Out index\n  let cacher;\n  let k;\n\n  if (multipleArguments) {\n    cacher = (...args) => {\n      k = toKey(...args);\n      if (cacher.has(k)) {\n        return cacher.get(k);\n      }\n      return cacher.set(k, func(...args));\n    };\n  } else {\n    cacher = (arg) => {\n      k = toKey(arg);\n      if (cacher.has(k)) {\n        return cacher.get(k);\n      }\n      return cacher.set(k, func(arg));\n    };\n  }\n\n  cacher.set = (key, val) => {\n    if (counter >= size) {\n      delete cache[index[fifo]];\n      delete index[fifo];\n      counter--;\n      fifo++;\n    }\n    cache[key] = val;\n    index[counter] = key;\n    counter++;\n    return val;\n  };\n\n  cacher.get = (key) => cache[key];\n\n  cacher.has = (key) => key in cache;\n\n  cacher.clear = () => {\n    cache = Object.create(null);\n    index = Object.create(null);\n    counter = 0;\n    fifo = 0;\n  };\n\n  cacher.size = () => counter;\n\n  return cacher;\n}\n","import numberFormatFactory from './parts/qs-number-formatter';\nimport memoize from './memoize';\n\nexport default function formatter(pattern, thousand, decimal, qType, localeInfo) {\n  const qformat = numberFormatFactory(localeInfo, pattern, thousand, decimal, qType);\n  const memoized = memoize(qformat.formatValue.bind(qformat), {\n    // Handle NaN and cases where toString yields different result than +operator. Ex. a Date.\n    toKey: (value) => (isNaN(value) ? value : +value),\n  });\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Number} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    return memoized(value);\n  }\n\n  /**\n   * Format a value according to a specific pattern\n   * that is not the one specified in the constructor\n   *\n   * @param  {String} p   Pattern\n   * @param  {Number} v   Value\n   * @param  {String} t   Thousand\n   * @param  {String} d   Decimal\n   * @return {String}     Formatted value\n   */\n  format.format = function formatFn(p, v, t, d) {\n    memoized.clear();\n    return qformat.format(v, p, t, d);\n  };\n\n  /**\n   * Change the pattern on existing formatter\n   *\n   * @param  {String} p     Pattern (optional)\n   * @return {String}       Returns the pattern\n   */\n  format.pattern = function patternFn(p) {\n    if (p) {\n      memoized.clear();\n      qformat.pattern = p;\n      qformat.prepare();\n    }\n    return qformat.pattern;\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  /* format.locale = function( ...args ) {\n    locale = formatLocale( ...args );\n    d3format = locale.format( pattern );\n\n    return this;\n  }; */\n\n  return format;\n}\n","/* eslint import/prefer-default-export: 0 */\n\nexport const TYPES = {\n  AUTO: 'U',\n  INTEGER: 'I',\n  NUMBER: 'R',\n  FIXED_TO: 'F',\n  MONEY: 'M',\n  DATE: 'D',\n  TIME: 'T',\n  DATE_TIME: 'TS',\n  INTERVAL: 'IV',\n};\n","import { TYPES } from '../constants';\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst DAYS_ABBR = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\nconst MONTHS_ABBR = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst SECONDS_PER_DAY = 86400;\n\nfunction pad(s, n) {\n  for (let i = s.length; i < n; i++) {\n    s = `0${s}`;\n  }\n  return s;\n}\n\nfunction parseDate(d, twelveFormat) {\n  let h = d.getUTCHours();\n  let day = d.getUTCDay() - 1;\n  if (twelveFormat) {\n    h %= 12;\n    if (!h) {\n      // h == 0 -> 12\n      h = 12;\n    }\n  }\n\n  if (day < 0) {\n    day = 6;\n  }\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth(),\n    day,\n    date: d.getUTCDate(),\n    h,\n    m: d.getUTCMinutes(),\n    s: d.getUTCSeconds(),\n    f: d.getUTCMilliseconds(),\n    t: d.getUTCHours() >= 12 ? 'pm' : 'am',\n  };\n}\n\nfunction getRemainder(value) {\n  let s = value.toString().split('.');\n  if (s[1]) {\n    s = Number(`0.${s[1]}`);\n  } else {\n    return 0;\n  }\n  return s;\n}\n\nfunction parseIntervalDays(days) {\n  const d = days;\n  const h = 24 * getRemainder(d);\n  const m = 60 * getRemainder(h);\n  const s = 60 * getRemainder(m);\n  const ms = 1000 * getRemainder(s);\n\n  return {\n    d: Math.floor(d),\n    h: Math.floor(h),\n    m: Math.floor(m),\n    s: Math.floor(s),\n    f: Math.round(ms),\n  };\n}\n\nfunction parseInterval(days, pattern) {\n  let units = parseIntervalDays(days),\n    d = units.d,\n    h = units.h,\n    m = units.m,\n    s = units.s,\n    f = units.f,\n    w = 0,\n    date;\n\n  if (/w+|t+/gi.test(pattern)) {\n    date = new Date(\n      Date.UTC(1899, 11, 30 + Math.floor(days), 0, 0, Math.round(SECONDS_PER_DAY * (days - Math.floor(days))))\n    );\n    if (isNaN(date.getTime())) {\n      date = null;\n    }\n  }\n\n  if (!/D+/gi.test(pattern)) {\n    h += d * 24;\n  }\n  if (!/h+/gi.test(pattern)) {\n    m += h * 60;\n  }\n  if (!/m+/gi.test(pattern)) {\n    s += m * 60;\n  }\n  if (/w+/gi.test(pattern)) {\n    w = date ? date.getDay() - 1 : 0;\n    if (w < 0) {\n      w = 6;\n    }\n  }\n\n  let someT = '';\n  if (date) {\n    someT = date.getUTCHours() >= 12 ? 'pm' : 'am';\n  }\n\n  return {\n    year: 0,\n    month: 0,\n    day: w,\n    date: d,\n    h,\n    m,\n    s,\n    f,\n    t: someT,\n  };\n}\n\nfunction getMasks(inst, d) {\n  return {\n    'Y+|y+': {\n      Y: `${Number(`${d.year}`.slice(-2))}`,\n      YY: pad(`${d.year}`.slice(-2), 2),\n      YYY: pad(`${d.year}`.slice(-3), 3),\n      def(m) {\n        // default\n        return pad(`${d.year}`, m.length);\n      },\n    },\n    'M+': {\n      M: d.month + 1,\n      MM: pad(`${d.month + 1}`, 2),\n      MMM: inst.locale_months_abbr[d.month],\n      def: inst.locale_months[d.month],\n    },\n    'W+|w+': {\n      W: d.day,\n      WW: pad(`${d.day}`, 2),\n      WWW: inst.locale_days_abbr[d.day],\n      def: inst.locale_days[d.day],\n    },\n    'D+|d+': {\n      D: d.date,\n      def(m) {\n        return pad(`${d.date}`, m.length);\n      },\n    },\n    'h+|H+': {\n      h: d.h,\n      def(m) {\n        return pad(`${d.h}`, m.length);\n      },\n    },\n    'm+': {\n      m: d.m,\n      def(m) {\n        return pad(`${d.m}`, m.length);\n      },\n    },\n    's+|S+': {\n      s: d.s,\n      def(m) {\n        return pad(`${d.s}`, m.length);\n      },\n    },\n    'f+|F+': {\n      def(m) {\n        let f = `${d.f}`,\n          n = m.length - f.length;\n        if (n > 0) {\n          for (let i = 0; i < n; i++) {\n            f += '0';\n          }\n        } else if (n < 0) {\n          f = f.slice(0, m.length);\n        }\n        return f;\n      },\n    },\n    't{1,2}|T{1,2}': {\n      def(m) {\n        let t = d.t;\n        if (m[0].toUpperCase() === m[0]) {\n          t = t.toUpperCase();\n        }\n        t = t.slice(0, m.length);\n        return t;\n      },\n    },\n  };\n}\n\nclass DateFormatter {\n  /**\n   * @name DateFormatter\n   * @constructs\n   * @param {Object} localeInfo\n   * @param {String} pattern\n   */\n  constructor(localeInfo, pattern, qtype) {\n    const info = localeInfo || {};\n\n    if (!info.qCalendarStrings) {\n      info.qCalendarStrings = {\n        qLongDayNames: DAYS,\n        qDayNames: DAYS_ABBR,\n        qLongMonthNames: MONTHS,\n        qMonthNames: MONTHS_ABBR,\n      };\n    }\n\n    this.localeInfo = info;\n    this.locale_days = info.qCalendarStrings.qLongDayNames.slice();\n    this.locale_days_abbr = info.qCalendarStrings.qDayNames.slice();\n    this.locale_months = info.qCalendarStrings.qLongMonthNames.slice();\n    this.locale_months_abbr = info.qCalendarStrings.qMonthNames.slice();\n\n    if (!pattern) {\n      const patternMap = {\n        [TYPES.TIME]: info.qTimeFmt || 'hh:mm:ss',\n        [TYPES.DATE]: info.qDateFmt || 'YYYY-MM-DD',\n        [TYPES.DATE_TIME]: info.qTimestampFmt || 'YYYY-MM-DD hh:mm:ss',\n      };\n\n      pattern = patternMap[qtype];\n    }\n\n    this.pattern = pattern;\n  }\n\n  clone() {\n    const n = new DateFormatter(this.localeInfo, this.pattern);\n    n.subtype = this.subtype;\n    return n;\n  }\n\n  /**\n   * Formats a date according to given pattern\n   * @param {Date} date The date to format.\n   * @param {String} pattern The desired format of the date\n   * var d = new Date(2013, 8, 15, 13, 55, 40, 987);\n   * var n = new DateFormatter();\n   * @example\n   * m.format( d, 'YYYY-MM-DD hh:mm:ss.ffff') // 2013-08-15 13:55:40.9870\n   * m.format( d, 'h:m:s tt') // 1:55:40 pm\n   * m.format( d, 'h:m:s TT') // 1:55:40 PM\n   * m.format( d, 'M/D/YYYY') // 8/15/2013\n   * m.format( d, 'WWWW DD MMM') // Thursday 15 Aug\n   * m.format( d, 'WWW DD MMMM @ hh:mm:ss') // Thu 15 August @ 13:55:40\n   */\n  format(date, pattern) {\n    // Fallback pattern is set in constructor\n    if (!pattern) {\n      pattern = this.pattern ? this.pattern : 'YYYY-MM-DD hh:mm:ss';\n    }\n\n    pattern = pattern.replace(/\\[.+]|\\[|]/g, '');\n    const hasTwelveFlag = /t+/gi.test(pattern);\n    let parsedDate;\n\n    if (date instanceof Date) {\n      parsedDate = parseDate(date, hasTwelveFlag);\n    } else {\n      if (date < 0) {\n        // parseInterval don't support for negative values\n        date = -date;\n        pattern = `-${pattern}`;\n      }\n      parsedDate = parseInterval(date, pattern);\n    }\n    // remove [] and everything inside it\n\n    const masks = getMasks(this, parsedDate);\n\n    const masksArr = [];\n    for (const mask in masks) {\n      if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n        masksArr.push(mask);\n      }\n    }\n    const dateTimeRegex = new RegExp(masksArr.join('|'), 'g');\n\n    const result = pattern.replace(dateTimeRegex, (m) => {\n      let r;\n      let mask;\n      for (mask in masks) {\n        if (Object.prototype.hasOwnProperty.call(masks, mask)) {\n          r = new RegExp(mask);\n          if (r.test(m)) {\n            break;\n          }\n        }\n      }\n      if (!r) {\n        return '';\n      }\n      let value;\n      for (const submask in masks[mask]) {\n        if (submask === m || submask.toLowerCase() === m) {\n          value = masks[mask][submask];\n          if (typeof value === 'undefined') {\n            value = masks[mask][submask.toLowerCase()];\n          }\n          break;\n        }\n      }\n      if (typeof value === 'undefined') {\n        value = masks[mask].def;\n      }\n\n      if (typeof value === 'function') {\n        value = value(m);\n      }\n      return value;\n    });\n    return result;\n  }\n}\n\nexport default function dateFormatFactory(...args) {\n  return new DateFormatter(...args);\n}\n","import dateFormatFactory from './parts/qs-date-formatter';\nimport { TYPES } from './constants';\nimport memoize from './memoize';\n\nconst MS_PER_DAY = 86400000;\n\nexport function QlikTimeToDate(value) {\n  return new Date(\n    Date.UTC(1899, 11, 30 + Math.floor(value), 0, 0, 0, Math.round(MS_PER_DAY * (value - Math.floor(value))))\n  );\n}\n\nexport default function formatter(pattern, qtype = 'TS', localeInfo = null) {\n  let qformat = dateFormatFactory(localeInfo, pattern, qtype);\n  let memoized = memoize(qformat.format.bind(qformat), {\n    toKey: (date) => (typeof date === 'object' && typeof date.getTime === 'function' ? date.getTime() : date),\n  });\n\n  /**\n   * Prepare a value according to the specified qtype\n   *\n   * @param  {Number} value The value to be formatted\n   * @return {Number}       The converted value (if applied)\n   */\n  function prepare(value) {\n    if (qtype !== TYPES.INTERVAL) {\n      return QlikTimeToDate(value);\n    }\n    return value;\n  }\n\n  /**\n   * Format a value according to the specified pattern created at construct\n   *\n   * @param  {Date} value   The number to be formatted\n   * @return {String}         [description]\n   */\n  function format(value) {\n    value = prepare(value);\n    return memoized(value);\n  }\n\n  /**\n   * Format a value according to a specific pattern\n   * that is not the one specified in the constructor\n   *\n   * @param  {String} p   Pattern\n   * @param  {Date} v   Value\n   * @return {String}     Formatted value\n   */\n  format.format = function formatFn(p, v) {\n    memoized.clear();\n    v = prepare(v);\n    return qformat.format(v, p);\n  };\n\n  /**\n   * Set the locale for the formatter\n   *\n   * @param  {Object} args   Locale object for formatting\n   * @return {Undefined}      Returns nothing\n   */\n  format.locale = function locale(li) {\n    qformat = dateFormatFactory(li, pattern, qtype);\n    memoized = memoize(qformat.format.bind(qformat), {\n      toKey: (date) => (typeof date === 'object' ? date.getTime() : date),\n    });\n    return this;\n  };\n\n  /**\n   * Get or set the QType\n   *\n   * @param  {String} nqt New qType (optional)\n   * @return {String}     Current qtype\n   */\n  format.qtype = function qtypeFn(nqt) {\n    if (nqt !== undefined) {\n      qtype = nqt;\n      memoized.clear();\n    }\n    return qtype;\n  };\n\n  return format;\n}\n","import numberFormat from './numberFormat';\nimport timeFormat from './timeFormat';\n\nexport { numberFormat, timeFormat };\n\nexport function createFromMetaInfo(meta, localeInfo) {\n  if (meta && meta.qNumFormat && ['D', 'T', 'TS', 'IV'].indexOf(meta.qNumFormat.qType) !== -1) {\n    return timeFormat(meta.qNumFormat.qFmt, meta.qNumFormat.qType, localeInfo);\n  }\n  let pattern = '#';\n  let thousand = localeInfo && typeof localeInfo.qThousandSep !== 'undefined' ? localeInfo.qThousandSep : ',';\n  let decimal = localeInfo && typeof localeInfo.qDecimalSep !== 'undefined' ? localeInfo.qDecimalSep : '.';\n  let type = 'U';\n  let isAuto = meta && !!meta.qIsAutoFormat;\n  if (meta && meta.qNumFormat) {\n    pattern = meta.qNumFormat.qFmt || pattern;\n    thousand = meta.qNumFormat.qThou || thousand;\n    decimal = meta.qNumFormat.qDec || decimal;\n    type = meta.qNumFormat.qType || type;\n    isAuto = isAuto && ['M'].indexOf(meta.qNumFormat.qType) === -1;\n  } else {\n    isAuto = true;\n  }\n\n  if (isAuto || type === 'U') {\n    pattern = `#${decimal}##A`;\n    type = 'U';\n  }\n\n  return numberFormat(pattern, thousand, decimal, type, localeInfo);\n}\n","import { createFromMetaInfo } from '../formatter';\n\nexport default function qField({ meta, id, key, localeInfo, fieldExtractor, value, type, sourceField } = {}) {\n  let values;\n\n  const valueFn = value || (type === 'dimension' ? (d) => d.qElemNo : (d) => d.qValue);\n  const labelFn = (d) => d.qText || '';\n  const reduce = type === 'dimension' ? 'first' : 'avg';\n  const formatter = createFromMetaInfo(meta, localeInfo);\n  const reduceLabel = type === 'dimension' ? 'first' : (labels, v) => formatter(v);\n\n  const f = {\n    id: () => id,\n    key: () => key,\n    raw: () => meta,\n    title: () => meta.qFallbackTitle || meta.label,\n    type: () => type,\n    origin: () => sourceField,\n    items: () => {\n      if (!values) {\n        values = fieldExtractor(f);\n      }\n      return values;\n    },\n    min: () => meta.qMin,\n    max: () => meta.qMax,\n    value: valueFn,\n    label: labelFn,\n    reduce,\n    reduceLabel,\n    formatter: () => formatter,\n    tags: () => meta.qTags,\n  };\n\n  return f;\n}\n","// import augmentH from './augment-hierarchy';\nimport extend from 'extend';\nimport SExtractor from './extractor-s';\nimport { extract as TExtractor, augment as augmentTree } from './extractor-t';\nimport { findField } from './util';\nimport field from './field';\n\nfunction createFields(path, obj, prefix, parentKey, opts) {\n  return (obj[path] || []).map((meta, i) => {\n    const fieldKey = `${parentKey ? `${parentKey}/` : ''}${path}/${i}`;\n    const f = {\n      instance: field(\n        extend(\n          {\n            id: `${prefix ? `${prefix}/` : ''}${fieldKey}`,\n            key: fieldKey,\n            meta,\n          },\n          opts\n        )\n      ),\n    };\n    f.attrDims = createFields(\n      'qAttrDimInfo',\n      meta,\n      prefix,\n      fieldKey,\n      extend({}, opts, { value: (v) => v.qElemNo, type: 'dimension' })\n    );\n    f.attrExps = createFields(\n      'qAttrExprInfo',\n      meta,\n      prefix,\n      fieldKey,\n      extend({}, opts, { value: (v) => v.qNum, type: 'measure' })\n    );\n    f.measures = createFields(\n      'qMeasureInfo',\n      meta,\n      prefix,\n      fieldKey,\n      extend({}, opts, { value: (v) => v.qValue, type: 'measure' })\n    );\n    return f;\n  });\n}\n\nexport default function q({ key, data, config = {} } = {}) {\n  const cache = {\n    fields: [],\n    wrappedFields: [],\n    allFields: [],\n    virtualFields: [],\n  };\n\n  const cube = data;\n  if (!cube) {\n    throw new Error('Missing \"data\" input');\n  }\n\n  if (!cube.qDimensionInfo) {\n    throw new Error('The \"data\" input is not recognized as a hypercube');\n  }\n\n  const deps = q.util;\n\n  const opts = {\n    cache,\n    cube,\n    localeInfo: config.localeInfo,\n    fieldExtractor: null,\n    pages: null,\n    hierarchy: () => null,\n    virtualFields: config.virtualFields,\n  };\n\n  const dataset = {\n    key: () => key,\n    raw: () => cube,\n    field: (query) => findField(query, opts),\n    fields: () => cache.fields.slice(),\n    extract: (extractionConfig) => opts.extractor(extractionConfig, dataset, cache, deps),\n    hierarchy: (hierarchyConfig) => opts.hierarchy(hierarchyConfig, dataset, cache, deps),\n    _cache: () => cache,\n  };\n\n  if (cube.qMode === 'K' || cube.qMode === 'T' || (!cube.qMode && cube.qNodesOnDim)) {\n    opts.extractor = TExtractor;\n    opts.hierarchy = augmentTree;\n    opts.pages = cube.qMode === 'K' ? cube.qStackedDataPages : cube.qTreeDataPages;\n  } else if (cube.qMode === 'S') {\n    opts.extractor = SExtractor;\n    opts.pages = cube.qDataPages;\n    opts.hierarchy = augmentTree;\n  } else {\n    opts.extractor = () => []; // TODO - throw unsupported error?\n  }\n\n  opts.fieldExtractor = (f) => opts.extractor({ field: f }, dataset, cache, deps);\n\n  const dimAcc = cube.qMode === 'S' ? (d) => d.qElemNumber : undefined;\n  const measAcc = cube.qMode === 'S' ? (d) => d.qNum : undefined;\n\n  cache.wrappedFields.push(\n    ...createFields('qDimensionInfo', cube, key, '', extend({}, opts, { value: dimAcc, type: 'dimension' }))\n  );\n  cache.wrappedFields.push(\n    ...createFields('qMeasureInfo', cube, key, '', extend({}, opts, { value: measAcc, type: 'measure' }))\n  );\n\n  cache.fields = cache.wrappedFields.map((f) => f.instance);\n\n  const traverse = (arr) => {\n    arr.forEach((f) => {\n      cache.allFields.push(f.instance);\n      traverse(f.measures);\n      traverse(f.attrDims);\n      traverse(f.attrExps);\n    });\n  };\n\n  traverse(cache.wrappedFields);\n\n  (config.virtualFields || []).forEach((v) => {\n    // key: 'temporal',\n    // from: 'qDimensionInfo/0',\n    // override: {\n    //   value: v => v.qNum,\n    // },\n    const sourceField = dataset.field(v.from);\n    const f = field({\n      meta: sourceField.raw(),\n      id: `${key}/${v.key}`,\n      sourceField,\n      fieldExtractor: (ff) => opts.extractor({ field: ff }, dataset, cache, deps),\n      key: v.key,\n      type: sourceField.type(),\n      localeInfo: opts.localeInfo,\n      value: sourceField.value,\n      ...(v.override || {}),\n    });\n    cache.virtualFields.push(f);\n  });\n\n  cache.allFields.push(...cache.virtualFields);\n\n  return dataset;\n}\n","import resolve from '../json-path-resolver';\n\nconst LAYOUT_TO_PROP = [\n  ['qHyperCube', 'qHyperCubeDef'],\n  ['qTreeData', 'qTreeDataDef'],\n  ['qDimensionInfo', 'qDimensions'],\n  ['qMeasureInfo', 'qMeasures'],\n  ['qAttrDimInfo', 'qAttributeDimensions'],\n  ['qAttrExprInfo', 'qAttributeExpressions'],\n];\n\nconst DIM_RX = /\\/qDimensionInfo(?:\\/(\\d+))?/;\nconst M_RX = /\\/qMeasureInfo\\/(\\d+)/;\nconst ATTR_DIM_RX = /\\/qAttrDimInfo\\/(\\d+)(?:\\/(\\d+))?/;\nconst ATTR_EXPR_RX = /\\/qAttrExprInfo\\/(\\d+)/;\nconst HC_RX = /\\/?qHyperCube/;\nconst TD_RX = /\\/?qTreeData/;\n\nconst SHORTEN_HC = (path) => `${path.substr(0, path.indexOf('/qHyperCubeDef') + 14)}`; // 14 = length of '/qHyperCubeDef'\nconst SHORTEN_TD = (path) => `${path.substr(0, path.indexOf('/qTreeDataDef') + 13)}`; // 13 = length of '/qTreeDataDef'\n\nexport function extractFieldFromId(id, layout) {\n  let path = id;\n  let dimensionIdx = -1;\n  let measureIdx = -1;\n  let pathToCube = '';\n  let shortenizer = (p) => p;\n  if (HC_RX.test(id)) {\n    pathToCube = `${path.substr(0, path.indexOf('qHyperCube') + 10)}`; // 10 = length of 'qHyperCube'\n    shortenizer = SHORTEN_HC;\n  } else if (TD_RX.test(id)) {\n    pathToCube = `${path.substr(0, path.indexOf('qTreeData') + 9)}`; // 9 = length of 'qTreeData'\n    shortenizer = SHORTEN_TD;\n  }\n\n  let shortenPath = true;\n\n  if (DIM_RX.test(id)) {\n    dimensionIdx = +DIM_RX.exec(id)[1];\n  }\n\n  if (M_RX.test(id)) {\n    measureIdx = +M_RX.exec(id)[1];\n  }\n\n  if (ATTR_DIM_RX.test(id)) {\n    measureIdx = -1;\n    dimensionIdx = 0;\n    const attrCol = +ATTR_DIM_RX.exec(path)[2];\n    if (!isNaN(attrCol)) {\n      dimensionIdx = attrCol;\n      path = path.replace(/\\/\\d+$/, '');\n    }\n    shortenPath = false;\n  }\n\n  if (ATTR_EXPR_RX.test(id)) {\n    // depends on number of measures + number of attr expressions\n    // in dimensions and measures before this one\n    const offset = measureIdx;\n    if (layout) {\n      measureIdx = 0;\n      const hc = resolve(pathToCube, layout);\n\n      // offset by number of measures\n      measureIdx += (hc.qMeasureInfo || []).length;\n\n      // offset by total number of attr expr in dimensions\n      // (assuming attr expr in dimensions are ordered first)\n      if (dimensionIdx > -1) {\n        measureIdx = hc.qDimensionInfo\n          .slice(0, dimensionIdx)\n          .reduce((v, dim) => v + dim.qAttrExprInfo.length, measureIdx);\n        dimensionIdx = -1;\n      } else {\n        measureIdx = hc.qDimensionInfo.reduce((v, dim) => v + dim.qAttrExprInfo.length, measureIdx);\n        // offset by total number of attr expr in measures before 'index'\n        measureIdx = hc.qMeasureInfo.slice(0, offset).reduce((v, meas) => v + meas.qAttrExprInfo.length, measureIdx);\n      }\n\n      // offset by the actual column value for the attribute expression itself\n      measureIdx += +ATTR_EXPR_RX.exec(path)[1];\n    } else if (dimensionIdx > -1) {\n      dimensionIdx = -1;\n      measureIdx = +ATTR_EXPR_RX.exec(path)[1];\n    } else {\n      measureIdx += +ATTR_EXPR_RX.exec(path)[1] + 1;\n    }\n  }\n\n  LAYOUT_TO_PROP.forEach(([v, prop]) => {\n    path = path.replace(v, prop);\n  });\n\n  if (shortenPath) {\n    path = shortenizer(path);\n  }\n\n  if (path && path[0] !== '/') {\n    path = `/${path}`;\n  }\n\n  return {\n    measureIdx,\n    dimensionIdx,\n    path,\n  };\n}\n\n/**\n * Helper method to generate suitable QIX selection methods and parameters based on a brush instance.\n * @alias brush\n * @memberof picasso.q\n * @param {Brush} brush A brush instance\n * @param {object} [opts]\n * @param {boolean} [opts.byCells=false] Whether to prefer selection by row index.\n * @param {string} [opts.primarySource] Field source to extract row indices from. If not specified, indices from first source are used.\n * @param {boolean} [opts.orMode=true] If false, combine measure range selections.\n * @param {object} [layout] QIX data layout. Needed only when brushing on attribute expressions, to be able to calculate the measure index.\n * @return {object[]} An array of relevant selections\n */\nexport default function qBrush(brush, opts = {}, layout) {\n  const byCells = opts.byCells;\n  const primarySource = opts.primarySource;\n  const selections = [];\n  const methods = {};\n  const isActive = brush.isActive();\n  let hasValues = false;\n  brush.brushes().forEach((b) => {\n    const info = extractFieldFromId(b.id, layout);\n    if (b.type === 'range' && info.measureIdx > -1 && info.dimensionIdx > -1) {\n      const ranges = b.brush.ranges();\n      if (ranges.length) {\n        hasValues = true;\n        if (!methods.multiRangeSelectTreeDataValues) {\n          methods.multiRangeSelectTreeDataValues = {\n            path: info.path,\n            ranges: [],\n          };\n        }\n        ranges.forEach((range) =>\n          methods.multiRangeSelectTreeDataValues.ranges.push({\n            qMeasureIx: info.measureIdx,\n            qDimensionIx: info.dimensionIdx,\n            qRange: {\n              qMin: range.min,\n              qMax: range.max,\n              qMinInclEq: true,\n              qMaxInclEq: true,\n            },\n          })\n        );\n      }\n    } else {\n      if (b.type === 'range' && info.measureIdx > -1) {\n        const ranges = b.brush.ranges();\n        if (ranges.length) {\n          hasValues = true;\n          if (!methods.rangeSelectHyperCubeValues) {\n            methods.rangeSelectHyperCubeValues = {\n              path: info.path,\n              ranges: [],\n            };\n          }\n          ranges.forEach((range) =>\n            methods.rangeSelectHyperCubeValues.ranges.push({\n              qMeasureIx: info.measureIdx,\n              qRange: {\n                qMin: range.min,\n                qMax: range.max,\n                qMinInclEq: true,\n                qMaxInclEq: true,\n              },\n            })\n          );\n        }\n      }\n      if (b.type === 'range' && info.dimensionIdx > -1) {\n        const ranges = b.brush.ranges();\n        if (ranges.length) {\n          hasValues = true;\n          if (!methods.selectHyperCubeContinuousRange) {\n            methods.selectHyperCubeContinuousRange = {\n              path: info.path,\n              ranges: [],\n            };\n          }\n          ranges.forEach((range) =>\n            methods.selectHyperCubeContinuousRange.ranges.push({\n              qDimIx: info.dimensionIdx,\n              qRange: {\n                qMin: range.min,\n                qMax: range.max,\n                qMinInclEq: true,\n                qMaxInclEq: false,\n              },\n            })\n          );\n        }\n      }\n\n      if (b.type === 'value' && info.dimensionIdx > -1) {\n        if (byCells) {\n          if (\n            layout &&\n            layout.qHyperCube &&\n            (layout.qHyperCube.qMode === 'P' || layout.qHyperCube.qMode === 'T' || layout.qHyperCube.qMode === 'K')\n          ) {\n            const hyperCube = layout.qHyperCube;\n            const noOfLeftDims = hyperCube.qNoOfLeftDims;\n            const dimInterColSortIdx = hyperCube.qEffectiveInterColumnSortOrder.indexOf(info.dimensionIdx);\n\n            if (!methods.selectPivotCells) {\n              methods.selectPivotCells = {\n                path: info.path,\n                cells: [],\n              };\n            }\n\n            if (b.id === primarySource || !primarySource) {\n              const validValues = b.brush\n                .values()\n                .map((s) => +s)\n                .filter((v) => !isNaN(v));\n\n              if ((noOfLeftDims === 0 || dimInterColSortIdx >= noOfLeftDims) && noOfLeftDims > -1) {\n                validValues.forEach((val) => {\n                  methods.selectPivotCells.cells.push({\n                    qType: 'T',\n                    qCol: val,\n                    qRow: dimInterColSortIdx - noOfLeftDims,\n                  });\n                });\n              } else {\n                validValues.forEach((val) => {\n                  methods.selectPivotCells.cells.push({\n                    qType: 'L',\n                    qCol: info.dimensionIdx,\n                    qRow: val,\n                  });\n                });\n              }\n              hasValues = !!methods.selectPivotCells.cells.length;\n            }\n          } else {\n            if (!methods.selectHyperCubeCells) {\n              methods.selectHyperCubeCells = {\n                path: info.path,\n                cols: [],\n              };\n            }\n\n            methods.selectHyperCubeCells.cols.push(info.dimensionIdx);\n            if (b.id === primarySource || (!primarySource && !methods.selectHyperCubeCells.values)) {\n              methods.selectHyperCubeCells.values = b.brush\n                .values()\n                .map((s) => +s)\n                .filter((v) => !isNaN(v));\n              hasValues = !!methods.selectHyperCubeCells.values.length;\n            }\n          }\n        } else {\n          const values = b.brush\n            .values()\n            .map((s) => +s)\n            .filter((v) => !isNaN(v));\n          hasValues = !!values.length;\n          selections.push({\n            params: [info.path, info.dimensionIdx, values, false],\n            method: 'selectHyperCubeValues',\n          });\n        }\n      }\n    }\n  });\n\n  if (!hasValues && isActive) {\n    return [\n      {\n        method: 'resetMadeSelections',\n        params: [],\n      },\n    ];\n  }\n\n  if (methods.rangeSelectHyperCubeValues) {\n    selections.push({\n      method: 'rangeSelectHyperCubeValues',\n      params: [\n        methods.rangeSelectHyperCubeValues.path,\n        methods.rangeSelectHyperCubeValues.ranges,\n        [],\n        opts.orMode ?? true,\n      ],\n    });\n  }\n\n  if (methods.selectHyperCubeContinuousRange) {\n    selections.push({\n      method: 'selectHyperCubeContinuousRange',\n      params: [methods.selectHyperCubeContinuousRange.path, methods.selectHyperCubeContinuousRange.ranges],\n    });\n  }\n\n  if (methods.selectHyperCubeCells) {\n    selections.push({\n      method: 'selectHyperCubeCells',\n      params: [\n        methods.selectHyperCubeCells.path,\n        methods.selectHyperCubeCells.values,\n        methods.selectHyperCubeCells.cols,\n      ],\n    });\n  }\n\n  if (methods.selectPivotCells) {\n    selections.push({\n      method: 'selectPivotCells',\n      params: [methods.selectPivotCells.path, methods.selectPivotCells.cells],\n    });\n  }\n\n  if (methods.multiRangeSelectTreeDataValues) {\n    selections.push({\n      method: 'multiRangeSelectTreeDataValues',\n      params: [methods.multiRangeSelectTreeDataValues.path, methods.multiRangeSelectTreeDataValues.ranges],\n    });\n  }\n\n  return selections;\n}\n","import data from './data/dataset';\nimport qBrushHelper from './brush/q-brush';\nimport numberFormat from './formatter/numberFormat';\nimport timeFormat from './formatter/timeFormat';\n\nexport default function initialize(picasso) {\n  data.util = picasso.data('matrix').util;\n  picasso.data('q', data);\n  picasso.formatter('q-number', numberFormat);\n  picasso.formatter('q-time', timeFormat);\n}\n\ninitialize.qBrushHelper = qBrushHelper; // deprecated\ninitialize.selections = qBrushHelper;\n"],"names":["getFieldAccessor","field","page","deps","cache","origin","fieldIdx","fields","indexOf","attrIdx","attrDimIdx","i","wrappedFields","length","attrDims","map","v","instance","attrExps","qArea","qLeft","qWidth","row","qAttrDims","qValues","qAttrExps","datumExtract","propCfg","cell","key","datum","value","label","String","source","cellToValue","f","mainCell","p","prop","rowIdx","sourceKey","target","targetProp","propCell","propCellFn","extend","qRow","extract","config","dataset","util","cfgs","Array","isArray","dataItems","cube","raw","normalizeConfig","props","main","propsArr","Object","keys","track","trackBy","trackType","tracker","trackedItems","items","j","qDataPages","fn","k","qMatrix","qTop","ret","exclude","filter","l","arr","m","fieldValues","fieldLabels","cfg","itemData","obj","push","collect","resolve","path","charAt","substring","split","subpath","container","carr","slice","join","c","flattenTree","children","steps","arrIndexAtTargetDepth","nodes","treeAccessor","sourceDepth","targetDepth","d","Math","max","min","prototype","valueOf","Function","node","findField","query","allFields","title","Error","DIM_RX","M_RX","ATTR_EXPR_RX","ATTR_DIM_RX","getColumnOrder","qColumnOrder","getDimensionColumnOrder","order","qDimensionInfo","ii","getFieldDepth","isFieldDimension","fieldDepth","pseudoMeasureIndex","measureIdx","remainder","treeOrder","qEffectiveInterColumnSortOrder","columnOrder","test","exec","replace","qMode","sourceDepthObject","targetDepthObject","nodeFn","valueFn","data","attrFn","doIt","item","pCfg","coll","collStr","str","cells","type","accessor","valueAccessor","attrAccessor","reduce","reduceLabel","getHierarchy","rootPath","childNodes","root","picker","tree","hierarchy","getHierarchyForSMode","matrix","dimensions","measures","__id","__root","r","id","isNew","qText","__parent","h","stratify","parentId","attachPropsAccessors","itemDepthObject","depthObject","accessors","augment","height","propDefs","idx","undefined","replica","copy","replicaDescendants","descendants","depth","isTree","g","mapped","this","escapeRegExp","SIprefixes","percentage","radix","oct","dec","hex","bin","rom","functional","prec","formatRadix","fradix","pattern","decimal","toString","toUpperCase","formatRoman","s","Number","nThousands","reverse","numeral","toLowerCase","formatFunctional","temp","floor","toExponential","escape","flags","justStr","RegExp","createRegExp","thousand","getAbbreviations","localeInfo","listSeparator","qNumericalAbbreviation","abbreviations","abbrs","forEach","abbreviation","abbreviationTuple","preparePattern","o","t","parts","lastPart","numericPattern","prefix","postfix","groupTemp","decTemp","regex","abbreviate","match","substr","pop","splitPattern","matchPrecisionResult","maxPrecision","numericRegex","NumberFormatter","thousandDelimiter","decimalDelimiter","patternSeparator","prepare","n","subtype","formatValue","prep","_prepared","positive","isFunctional","negative","zero","exponent","abbr","absValue","num","sciValue","decimalPartPattern","original","isNaN","abbrArray","parseInt","sort","a","b","lowerAbbreviation","upperAbbreviation","suggestedAbbrExponent","pow","abs","round","toPrecision","ceil","log","formatter","wholePart","toFixed","wholePartPattern","nDecimals","nZeroes","decimalPart","numberFormatFactory","args","memoize","func","opts","size","multipleArguments","toKey","arg","create","index","counter","fifo","cacher","has","get","set","val","clear","qType","qformat","memoized","bind","format","formatFn","patternFn","TYPES","AUTO","INTEGER","NUMBER","FIXED_TO","MONEY","DATE","TIME","DATE_TIME","INTERVAL","DAYS","DAYS_ABBR","MONTHS","MONTHS_ABBR","SECONDS_PER_DAY","pad","parseDate","twelveFormat","getUTCHours","day","getUTCDay","year","getUTCFullYear","month","getUTCMonth","date","getUTCDate","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getRemainder","parseIntervalDays","days","ms","parseInterval","units","w","Date","UTC","getTime","getDay","someT","getMasks","inst","Y","YY","YYY","def","M","MM","MMM","locale_months_abbr","locale_months","W","WW","WWW","locale_days_abbr","locale_days","D","DateFormatter","qtype","info","qCalendarStrings","qLongDayNames","qDayNames","qLongMonthNames","qMonthNames","patternMap","qTimeFmt","qDateFmt","qTimestampFmt","hasTwelveFlag","parsedDate","masks","masksArr","mask","hasOwnProperty","call","dateTimeRegex","result","submask","dateFormatFactory","MS_PER_DAY","QlikTimeToDate","locale","li","qtypeFn","nqt","createFromMetaInfo","meta","qNumFormat","timeFormat","qFmt","qThousandSep","qDecimalSep","isAuto","qIsAutoFormat","qThou","qDec","numberFormat","qField","fieldExtractor","sourceField","values","qElemNo","qValue","labelFn","labels","qFallbackTitle","qMin","qMax","tags","qTags","createFields","parentKey","fieldKey","qNum","q","virtualFields","pages","extractionConfig","extractor","hierarchyConfig","_cache","qNodesOnDim","TExtractor","augmentTree","qStackedDataPages","qTreeDataPages","SExtractor","dimAcc","qElemNumber","measAcc","traverse","from","ff","override","LAYOUT_TO_PROP","HC_RX","TD_RX","SHORTEN_HC","SHORTEN_TD","extractFieldFromId","layout","dimensionIdx","pathToCube","shortenizer","shortenPath","attrCol","offset","hc","qMeasureInfo","dim","qAttrExprInfo","meas","qBrush","brush","byCells","primarySource","selections","methods","isActive","hasValues","brushes","ranges","multiRangeSelectTreeDataValues","range","qMeasureIx","qDimensionIx","qRange","qMinInclEq","qMaxInclEq","rangeSelectHyperCubeValues","selectHyperCubeContinuousRange","qDimIx","qHyperCube","hyperCube","noOfLeftDims","qNoOfLeftDims","dimInterColSortIdx","selectPivotCells","validValues","qCol","selectHyperCubeCells","cols","params","method","orMode","initialize","picasso","qBrushHelper"],"mappings":"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Aa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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"}