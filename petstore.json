{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "http://petstore.swagger.io/v1"
        }
    ],
    "paths": {
        "/trading/users/{user_id}/orders": {
            "get": {
                "summary": "Retrieves a list of orders for the account, filtered by the supplied query parameters.",
                "operationId": "listOrders",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Order status to be queried. open, closed or all. Defaults to open.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of orders in response. Defaults to 50 and max is 500.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "The response will include only ones submitted until this timestamp (exclusive.)",
                        "required": false,
                        "schema": {
                            "type": "timestamp"
                        }
                    },
                    {
                        "name": "until",
                        "in": "query",
                        "description": "The response will include only ones submitted after this timestamp (exclusive.)",
                        "required": false,
                        "schema": {
                            "type": "timestamp"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The chronological order of response based on the submission time. asc or desc. Defaults to desc.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nested",
                        "in": "query",
                        "description": "If true, the result will roll up multi-leg orders under the legs field of primary order.    ",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "symbols",
                        "in": "query",
                        "description": "A comma-separated list of symbols to filter by (ex. “AAPL,TSLA,MSFT”).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Order object",
                        "headers": {
                            "x-next": {
                                "description": "A link to the next page of responses",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Orders"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Creating an order for your end customer.",
                "operationId": "createOrder",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Creating an order for your end customer.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "successful operation",
                            "schema": {
                                "$ref": "#/definitions/Order"
                            }
                        },
                        "400": {
                            "description": "Invalid Order"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Attempts to cancel all open orders. A response will be provided for each order that is attempted to be cancelled. \n  If an order is no longer cancelable, the server will respond with status 500 and reject the request.",
                "operationId": "deleteOrders",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HTTP 207 Multi-Status with body, which is an array of objects that include the order id, http status code and an order object for each cancellation request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClosedOrders"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trading/users/{user_id}/orders/{order_id}": {
            "get": {
                "summary": "Retrieves a single order for the given order_id.",
                "operationId": "getOrder",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nested",
                        "in": "query",
                        "description": "If true, the result will roll up multi-leg orders under the legs field of primary order.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested Order object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Replaces a single order with updated parameters. Each parameter overrides the corresponding attribute of the existing order. The other attributes remain the same as the existing order.",
                "operationId": "patchOrder",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the order_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Creating an order for your end customer.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "description": "A new Order object with a new order_id",
                            "schema": {
                                "$ref": "#/definitions/Order"
                            }
                        },
                        "400": {
                            "description": "Invalid Order"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Attempts to cancel an open order.",
                "operationId": "deleteOrder",
                "tags": [
                    "orders"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Each trading request must pass in the account_id in the URL.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success (No Content).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClosedOrder"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "components": {
            "schemas": {
                "Order": {
                    "type": "object",
                    "required": [
                        "symbol",
                        "qty",
                        "notional",
                        "side",
                        "type",
                        "time_in_force"
                    ],
                    "properties": {
                        "symbol": {
                            "type": "string",
                            "description": "Symbol or asset ID to identify the asset to trade",
                            "example": "AAPL"
                        },
                        "qty": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Number of shares to trade. Can be fractionable for only market and day order types.",
                            "example": "4.125"
                        },
                        "notional": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Dollar amount to trade. Cannot work with qty. Can only work for market order types and time_in_force = day.",
                            "example": "4.125"
                        },
                        "side": {
                            "type": "string",
                            "description": "buy or sell",
                            "enum": [
                                "buy",
                                "sell"
                            ]
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "market",
                                "limit",
                                "stop",
                                "stop_limit",
                                "trailing_stop"
                            ]
                        },
                        "time_in_force": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "enum": [
                                "day",
                                "gtc",
                                "opg",
                                "cls",
                                "ioc",
                                "fok"
                            ]
                        },
                        "limit_price": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Required. If type is limit or stop_limit"
                        },
                        "stop_price": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Required. If type is stop or stop_limit"
                        },
                        "trail_price": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Required. If type is trailing_stop, trail_price or trail_percent is required"
                        },
                        "trail_percent": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "Required. If type is trailing_stop, trail_price or trail_percent is required"
                        },
                        "extended_hours": {
                            "type": "string",
                            "description": "Defaults to false. If true, order will be eligible to execute in premarket/afterhours. Only works with type limit and time_in_force = day."
                        },
                        "client_order_id": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "UUID"
                                }
                            ],
                            "description": "A unique identifier for the order. Automatically generated if not sent. (<= 48 characters)"
                        },
                        "order_class": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "simple, bracket, oco or oto",
                            "enum": [
                                "simple",
                                "bracket",
                                "oco",
                                "oto"
                            ]
                        },
                        "take_profit": {
                            "type": "object",
                            "description": "Takes in a string/number value for limit_price"
                        },
                        "stop_loss": {
                            "type": "object",
                            "description": "Takes in a string/number values for stop_price and limit_price"
                        },
                        "commission": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ],
                            "description": "The commission you want to collect from the user."
                        }
                    }
                },
                "ClosedOrder": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "aaeec1f3-4917-4cfd-b89f-bab24495d2ff"
                        },
                        "status": {
                            "type": "string",
                            "example": "200"
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                    
                },
                "Orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/Order"
                    }
                },
                "ClosedOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/ClosedOrder"
                    }
                },
                "Error": {
                    "type": "object",
                    "required": [
                        "code",
                        "message"
                    ],
                    "properties": {
                        "code": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "message": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    }
                }
            }
        }
    }
}